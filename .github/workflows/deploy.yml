name: Deploy Symfony to OVH

on:
  push:
    branches:
      - main # ou la branche que vous souhaitez déployer

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # Vérifier le code source depuis GitHub
      - name: Checkout code PHp
        uses: actions/checkout@v2

      # Installer Composer (si nécessaire)
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'  # Remplacez par la version PHP que vous utilisez
          extensions: mbstring, xml, bcmath

      # Déployer via FTP
      - name: Deploy to OVH via FTP
        uses: appleboy/ftp-action@v1.0.0
        with:
          host: ${{ secrets.OVH_FTP_HOST }}        # Ajoutez l'URL ou l'IP de votre serveur FTP OVH
          username: ${{ secrets.OVH_FTP_USERNAME }}  # Ajoutez votre nom d'utilisateur FTP
          password: ${{ secrets.OVH_FTP_PASSWORD }}  # Ajoutez votre mot de passe FTP
          local-dir: ./   # Répertoire local à déployer, par exemple './' pour tout le projet
          remote-dir: /home/eccemiz/testapi  # Répertoire distant sur votre serveur OVH (généralement le dossier 'public_html')
          passive: true   # Activez si nécessaire pour votre serveur FTP

      # Créer un fichier .env.prod avec les valeurs nécessaires
      - name: Create .env.prod
        run: |
          echo "DATABASE_URL=${{ secrets.RECETTE_DATABASE_URL }}" >> .env.prod
          echo "S3_KEY=${{ secrets.RECETTE_S3_KEY }}" >> .env.prod
          echo "S3_SECRET=${{ secrets.RECETTE_S3_SECRET }}" >> .env.prod
          echo "S3_REGION=${{ secrets.RECETTE_S3_REGION }}" >> .env.prod
          echo "S3_BUCKET=${{ secrets.RECETTE_S3_BUCKET }}" >> .env.prod
          echo "STRIPE_SECRET_KEY=${{ secrets.RECETTE_STRIPE_SECRET_KEY }}" >> .env.prod
          echo "STRIPE_WEBHOOK_SECRET=${{ secrets.RECETTE_STRIPE_WEBHOOK_SECRET }}" >> .env.prod
          echo "MAILER_DSN=${{ secrets.RECETTE_MAILER_DSN }}" >> .env.prod

      # Installer Composer
      - name: Install dependencies with Composer
        run: |
          cd /home/eccemiz/testapi
          curl -sS https://getcomposer.org/installer | php
          php composer.phar install --no-dev --optimize-autoloader

      # Autres actions si nécessaires (exécuter les commandes Symfony pour la prod, par exemple)
      - name: Clear Symfony cache and run migrations
        run: |
          ssh ${{ secrets.OVH_SSH_USER }}@${{ secrets.OVH_SSH_HOST }} << 'EOF'
            cd /home/eccemiz/testapi
            php bin/console cache:clear --env=prod
            php bin/console doctrine:migrations:migrate --env=prod
            php bin/console assets:install --env=prod
          EOF
